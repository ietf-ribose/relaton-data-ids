---
id: I-D.ietf-tsvwg-l4s-arch
title:
  content: 'Low Latency, Low Loss, Scalable Throughput (L4S) Internet Service: Architecture'
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-ietf-tsvwg-l4s-arch-06.txt
  type: TXT
type: standard
docid:
- id: I-D.ietf-tsvwg-l4s-arch
  type: rfc-anchor
- id: draft-ietf-tsvwg-l4s-arch-06
  type: Internet-Draft
docnumber: I-D.ietf-tsvwg-l4s-arch
date:
  type: published
  value: '2020-03-09'
contributor:
- person:
    name:
      initial:
        content: B.
        language: en
      surname:
        content: Briscoe
        language: en
      completename:
        content: Bob Briscoe
        language: en
    affiliation:
      organization:
        name: Independent
  role: author
- person:
    name:
      initial:
        content: K.
        language: en
      surname:
        content: De Schepper
        language: en
      completename:
        content: Koen De Schepper
        language: en
    affiliation:
      organization:
        name: Nokia Bell Labs
  role: author
- person:
    name:
      initial:
        content: M.
        language: en
      surname:
        content: Bagnulo
        language: en
      completename:
        content: Marcelo Bagnulo
        language: en
    affiliation:
      organization:
        name: Universidad Carlos III de Madrid
  role: author
- person:
    name:
      initial:
        content: G.
        language: en
      surname:
        content: White
        language: en
      completename:
        content: Greg White
        language: en
    affiliation:
      organization:
        name: CableLabs
  role: author
revdate: '2020-03-09'
language: en
script: Latn
abstract:
  content: "\n\t <p>   This document describes the L4S architecture, which enables
    Internet\n   applications to achieve Low Latency, Low Loss, and Scalable\n   throughput
    (L4S).  The insight on which L4S is based is that the root\n   cause of queuing
    delay is in the congestion controllers of senders,\n   not in the queue itself.
    \ The L4S architecture is intended to enable\n   *all* Internet applications to
    transition away from congestion\n   control algorithms that cause queuing delay,
    to a new class of\n   congestion controls that utilize explicit congestion signaling\n
    \  provided by the network.  This new class of congestion control can\n   provide
    low latency for capacity-seeking flows, so applications can\n   achieve both high
    bandwidth and low latency.\n\n   The architecture primarily concerns incremental
    deployment.  It\n   defines mechanisms that allow both classes of congestion control
    to\n   coexist in a shared network.  These mechanisms aim to ensure that the\n
    \  latency and throughput performance using an L4S-compliant congestion\n   controller
    is usually much better (and never worse) than the\n   performance would have been
    using a 'Classic' congestion controller,\n   and that competing flows continuing
    to use 'Classic' controllers are\n   typically not impacted by the presence of
    L4S.  These characteristics\n   are important to encourage adoption of L4S congestion
    control\n   algorithms and L4S compliant network elements.\n\n   The L4S architecture
    consists of three components: network support to\n   isolate L4S traffic from
    classic traffic and to provide appropriate\n   congestion signaling to both types;
    protocol features that allow\n   network elements to identify L4S traffic and
    allow for communication\n   of congestion signaling; and host support for immediate
    congestion\n   signaling with an appropriate congestion response that enables\n
    \  scalable performance.\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-ietf-tsvwg-l4s-arch-06
doctype: internet-draft
