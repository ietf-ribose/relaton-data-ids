---
id: I-Dietf-core-block
title:
- content: Blockwise transfers in CoAP
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-ietf-core-block-14.txt
  type: TXT
type: standard
docid:
- id: I-D ietf-core-block
  type: IETF
  primary: true
- id: I-D.ietf-core-block
  type: IETF
  scope: anchor
- id: draft-ietf-core-block-14
  type: Internet-Draft
docnumber: I-D.ietf-core-block
date:
- type: published
  value: '2013-10-21'
contributor:
- person:
    name:
      initial:
      - content: C.
        language:
        - en
      surname:
        content: Bormann
        language:
        - en
      completename:
        content: Carsten Bormann
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: Z.
        language:
        - en
      surname:
        content: Shelby
        language:
        - en
      completename:
        content: Zach Shelby
        language:
        - en
  role:
  - author
revdate: '2013-10-21'
language:
- en
script:
- Latn
abstract:
- content: '<p>CoAP is a RESTful transfer protocol for constrained nodes and networks.
    Basic CoAP messages work well for the small payloads we expect from temperature
    sensors, light switches, and similar building-automation devices. Occasionally,
    however, applications will need to transfer larger payloads -- for instance, for
    firmware updates. With HTTP, TCP does the grunt work of slicing large payloads
    up into multiple packets and ensuring that they all arrive and are handled in
    the right order. CoAP is based on datagram transports such as UDP or DTLS, which
    limits the maximum size of resource representations that can be transferred without
    too much fragmentation. Although UDP supports larger payloads through IP fragmentation,
    it is limited to 64 KiB and, more importantly, doesn''t really work well for constrained
    applications and networks. Instead of relying on IP fragmentation, this specification
    extends basic CoAP with a pair of "Block" options, for transferring multiple blocks
    of information from a resource representation in multiple request-response pairs.
    In many important cases, the Block options enable a server to be truly stateless:
    the server can handle each block transfer separately, with no need for a connection
    setup or other server-side memory of previous block transfers. In summary, the
    Block options provide a minimal way to transfer larger representations in a block-wise
    fashion.</p>'
  language:
  - en
  script:
  - Latn
  format: text/html
fetched: '2022-02-21'
doctype: internet-draft
