---
id: I-Dietf-tsvwg-tcp-eifel-alg
title:
- content: The Eifel Detection Algorithm for TCP
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-ietf-tsvwg-tcp-eifel-alg-07.txt
  type: TXT
type: standard
docid:
- id: I-D ietf-tsvwg-tcp-eifel-alg
  type: IETF
- id: I-D.ietf-tsvwg-tcp-eifel-alg
  type: IETF
  scope: anchor
- id: draft-ietf-tsvwg-tcp-eifel-alg-07
  type: Internet-Draft
docnumber: I-D.ietf-tsvwg-tcp-eifel-alg
date:
- type: published
  value: 2002-12
contributor:
- organization:
    name:
    - Internet Engineering Task Force
    abbreviation: IETF
  role:
  - publisher
- person:
    name:
      initial:
      - content: L.
        language:
        - en
      surname:
        content: Reiner
        language:
        - en
      completename:
        content: Ludwig Reiner
        language:
        - en
    affiliation:
    - organization:
        name:
        - Ericsson Research
  role:
  - author
- person:
    name:
      initial:
      - content: M.
        language:
        - en
      surname:
        content: Meyer
        language:
        - en
      completename:
        content: Michael Meyer
        language:
        - en
    affiliation:
    - organization:
        name:
        - Ericsson Research
  role:
  - author
revdate: 2002-12
language:
- en
script:
- Latn
abstract:
- content: "<p>The Eifel detection algorithm allows a TCP sender to detect a posteriori
    whether it has entered loss recovery unnecessarily. It requires that the TCP Timestamps
    option defined in RFC 1323 be enabled for a connection. The Eifel detection algorithm
    makes use of the fact that the TCP Timestamps option eliminates the retransmission
    ambiguity in TCP. Based on the timestamp of the first acceptable ACK that arrives
    during loss recovery, it decides whether loss recovery was entered unnecessarily.
    The Eifel detection algorithm provides a basis for future TCP enhancements. This
    includes response algorithms to back out of loss recovery by restoring a TCP sender's
    congestion control state. This memo defines an Experimental Protocol for the Internet
    community.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
place:
- Fremont, CA
fetched: '2022-02-03'
doctype: internet-draft
