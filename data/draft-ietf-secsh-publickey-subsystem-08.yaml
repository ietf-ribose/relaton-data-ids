---
id: draft-ietf-secsh-publickey-subsystem-08
title:
- content: Secure Shell Public Key Subsystem
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-ietf-secsh-publickey-subsystem-08.txt
  type: TXT
type: standard
docid:
- id: draft-ietf-secsh-publickey-subsystem-08
  type: Internet-Draft
  primary: true
- id: I-D.ietf-secsh-publickey-subsystem
  type: IETF
  scope: anchor
docnumber: I-D.ietf-secsh-publickey-subsystem
date:
- type: published
  value: 2006-10
contributor:
- person:
    name:
      initial:
      - content: J.
        language:
        - en
      surname:
        content: Van Dyke
        language:
        - en
      completename:
        content: Jeff Van Dyke
        language:
        - en
    affiliation:
    - organization:
        name:
        - VanDyke Software
  role:
  - author
- person:
    name:
      initial:
      - content: J.
        language:
        - en
      surname:
        content: Galbraith
        language:
        - en
      completename:
        content: Joseph Galbraith
        language:
        - en
    affiliation:
    - organization:
        name:
        - VanDyke Software
  role:
  - author
- person:
    name:
      initial:
      - content: J.
        language:
        - en
      surname:
        content: Bright
        language:
        - en
      completename:
        content: Jon Bright
        language:
        - en
    affiliation:
    - organization:
        name:
        - Silicon Circus
  role:
  - author
revdate: 2006-10
language:
- en
script:
- Latn
abstract:
- content: "<p>Secure Shell defines a user authentication mechanism that is based
    on public keys, but does not define any mechanism for key distribution. No common
    key management solution exists in current implementations. This document describes
    a protocol that can be used to configure public keys in an implementation-independent
    fashion, allowing client software to take on the burden of this configuration.
    The Public Key Subsystem provides a server-independent mechanism for clients to
    add public keys, remove public keys, and list the current public keys known by
    the server. Rights to manage public keys are specific and limited to the authenticated
    user. A public key may also be associated with various restrictions, including
    a mandatory command or subsystem. [STANDARDS-TRACK]</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-ietf-secsh-publickey-subsystem-08
fetched: '2022-04-06'
doctype: internet-draft
