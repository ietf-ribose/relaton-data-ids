---
id: I-D.shalunov-tana-problem-statement
title:
  content: Transport for Advanced Networking Applications (TANA) Problem Statement
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-shalunov-tana-problem-statement-01.txt
  type: TXT
type: standard
docid:
- id: I-D.shalunov-tana-problem-statement
  type: rfc-anchor
- id: draft-shalunov-tana-problem-statement-01
  type: Internet-Draft
docnumber: I-D.shalunov-tana-problem-statement
date:
  type: published
  value: '2008-07-14'
contributor:
  person:
    name:
      completename:
        content: Stanislav Shalunov
        language: en
  role: author
revdate: '2008-07-14'
language: en
script: Latn
abstract:
  content: '<p>The IETF P2PI workshop conducted in the end of May 2008 at MIT inBoston
    has identified a number of potential documents for the IETF towork on.One is a
    transport protocol with congestion control mechanism thatenables an advanced networking
    application to minimize the extradelay it induces in the bottleneck while implementing
    an end-to-endversion of scavenger service. At least one such protocol has nowbeen
    implemented by a major peer-to-peer application and deployed inthe wild with favorable
    results.Another is a document that addresses community concerns about the useof
    multiple transport connections by peer-to-peer applications, bothwhen these connections
    run to the same peer and to different peers.These two items appear to fall within
    the Transport area, but notwithin the charter of any existing working group. It
    is not obviouswhat WG''s charter could be naturally extended to encompass these
    twoitems. The TANA BoF is held to explore the problem space, gauge theinterest
    in the problems within the Transport area, and to see if thecommunity and the
    area directors believe that it makes sense to forma TANA working group within
    the Transport area chartered to work on1. standardizing end-to-end congestion
    control that enables advanced application to minimize the delay they introduce
    into the network and a protocol using it and2. a document describing the current
    practice of peer-to-peer apps'' use of multiple transport connections and recommendations
    in this space.1. Requirements notationThe key words "MUST", "MUST NOT", "REQUIRED",
    "SHALL", "SHALL NOT","SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL"
    in thisdocument are to be interpreted as described in [RFC2119].2. Congestion
    control that minimizes delay and a UDP-based protocol using itThe standard congestion
    control in TCP is based on loss and has notbeen designed to drive delay to any
    given value. Because TCP needslosses to back off, when a FIFO bottleneck lacks
    AQM, TCP fills thebuffer, effectively maximizing possible delay. Large number
    of thethinnest links in the Internet, particularly most uplinks of homeconnections,
    lack AQM. They also frequently contain enough bufferspace to get delays into hundreds
    of milliseconds and even seconds.There is no benefit to having delays this large,
    but there are verysubstantial drawbacks for interactive applications: games and
    VoIPbecome impossible and even web browsing becomes very slow.While a number of
    delay-based congestion control mechanisms have beenproposed, they were generally
    not designed to minimize the delayinduced in the network.It is desirable to have
    a congestion control mechanism that wouldallow to keep the latency across the
    congested bottleneck low even asit is saturated. This would allow applications
    that send largeamounts of data, particularly upstream on home connections, such
    aspeer-to-peer application, to operate without destroying theexperience in interactive
    applications. It is possible to designcongestion control mechanisms that take
    advantage of delaymeasurements and can back off before loss occurs. One such mechanismhas
    been deployed by BitTorrent in the wild with the BitTorrent DNAclient. This mechanism
    not only allows to keep delay across abottleneck low, but also yields quickly
    in the presence of competingtraffic with loss-based congestion control.Standardization
    of a congestion control mechanism that meets thesedesign objectives would enable
    other advanced networking applicationsto better get out of the way of interactive
    apps.To deploy a protocol using such congestion control in today''sInternet, the
    protocol needs to be designed to work with existingdeployed NATs, firewalls, and
    other middleboxes. This limits thechoices of the transport framing to TCP and
    UDP. Modifying TCP isout of scope for TANA, because it is a more ambitious project
    whileadvanced applications can use a special protocol to talk amonginstances of
    themselves. This leaves us with UDP as the underlyingframing for the protocol.In
    addition to direct and immediate benefits for advancedapplication, such congestion
    control would lay the foundation for apossible future evolution of the Internet
    where loss is not part ofthe designed behavior and delay is minimized.3. Use of
    multiple transport connections by peer-to-peer applicationsThe community is concerned
    about the possible use of multipletransport connections by peer-to-peer clients,
    particularly if thegoal of such use is to circumvent fairness mechanisms in TCP.Peer-to-peer
    clients are designed to open connections to multipleother peers to organize a
    well-connected mesh. For example, withjust a single connection per peer, peers
    would pair off and bequickly out of trading material; with two connections, peers
    wouldform long chains that still promote segmentation and are fragile.There is
    confusion about whether peer-to-peer applications are alsodesigned to open multiple
    connections to the same peer to get anunfair share of bottleneck capacity. (I
    am personally not familiarwith examples of P2P clients that are designed to open
    multipleconnections to the same destination, for any purpose.)While the use of
    multiple transport connections, even to the samedestination, has been common since
    the advent of the web browser,peer-to-peer applications are believed by some to
    open an unusuallylarge number of connections and send data for particularly longperiods
    of time.The most common P2P protocol, BitTorrent, uses a mechanism called"choking"
    to limit the number of connections that actually send andreceive data. Many more
    connections are open that used for data.Most connections are only used for small
    pieces of metadata. Thisfurther complicates the analysis and can create the impression
    thatthe peer uses many more connections than it actually does.Both the IETF transport
    community and the designers of P2P apps wouldbenefit from clarity produced by
    a document that would1. describe the current practice of multiple connections
    use by peer-to-peer apps and2. make recommendations about the best such practices.</p>'
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-shalunov-tana-problem-statement-01
doctype: internet-draft
