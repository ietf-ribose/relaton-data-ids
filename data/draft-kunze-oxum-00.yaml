---
id: I-D.kunze-oxum
title:
  content: 'Oxum: Octet Stream Sum http://www.ietf.org/internet-drafts/draft-kunze-oxum-00.txt'
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-kunze-oxum-00.txt
  type: TXT
type: standard
docid:
- id: I-D.kunze-oxum
  type: rfc-anchor
- id: draft-kunze-oxum-00
  type: Internet-Draft
docnumber: I-D.kunze-oxum
date:
  type: published
  value: '2008-11-18'
contributor:
  person:
    name:
      completename:
        content: John Kunze
        language: en
  role: author
revdate: '2008-11-18'
language: en
script: Latn
abstract:
  content: '<p>This document specifies "oxum", a two-part number, OCTETS.STREAMS,that
    is a kind of simple size summary for complex digital objects.In the mainstream
    case of a complex object that is a set of files,the STREAMS part is the total
    number of files and the OCTETS part isthe total number of 8-bit bytes across all
    those files; for example,an oxum of 876543.21 could mean a total of 876,543 bytes
    across 21files. Which set of streams comprises a complex object for an oxumcomputation
    depends in general on the object''s type. One importanttype is the stream set
    defined by the set of files contained in afile hierarchy. An oxum is not a checksum
    in that, while a changedoxum means a changed object, an unchanged oxum does not
    mean anunchanged object.1. The size of a digital objectIt can be hard to characterize
    the size of an arbitrary digitalobject. Word count, page count, image dimensions,
    video runningtime, or number of database records might all be useful metrics,depending
    on the type of the object. For a single file, one crudebut easily obtained metric
    is the number of octets (8-bit bytes) inthe file. This document introduces an
    analogous metric for a_complex digital object_, by which we mean an object that
    is notequivalent to a single file. A complex object may consist of a groupof files
    or parts of one or more files (e.g., a database).2. The octet stream sum (oxum)A
    complex digital object that has a well-defined set of octetstreams, such as a
    document represented by a group of 14 text andimage files, has a well-defined
    "oxum" (octet stream sum). The oxumis a two part number such as 567898.14which
    corresponds to 567,898 octets spread over 14 files. Thegeneral form of an oxum
    is OCTETS.STREAMSwhere STREAMS is the total number of streams (e.g., files) and
    OCTETSis the total number of octets across all those streams. In general,these
    two numbers will be positive integers, although there may besituations (not described
    here) in which it makes sense for eitherone of them to be left unspecified with
    a hyphen (''-''). The period(''.'') separator is required. Other examples:1998.10
    # 1998 octets spread over 10 streams105.3 # 105 octets, 3 streams (not 105 and
    3 tenths)21436794142.831# almost 19 Gigabytes spread over 831 streams709895249489.8756
    # about 661 Gb, or 710 Gb if you divide by 1000-.1# one stream, but number of
    octets not known yetThe oxum is designed to be machine readable and to fit into
    a varietyof syntactic contexts, such as command lines, file paths, URL[RFC3986]
    query strings, and XML [XML] tags.Note that the oxum is _not_ designed as a secure
    digest or checksum.While an oxum cannot change without a change to the object,
    anunchanged oxum absolutely does not imply an unchanged object. Do notuse oxum
    in place of a cryptographic digest algorithm (cf. SHA1[RFC3174]).3. Oxum complex
    object typesAn _oxum object type_ is used to describe how to derive an object''sstream
    set. For oxum to be meaningful for an object type, the typemust have a well-defined,
    canonical stream set. Once the stream setis known, the oxum computation is straightforward
    and the streams canbe processed in any order. One especially natural way to derive
    astream set is to define a way to reduce an object type to a filegroup.Files are
    primal streams. In this document, a "regular" file is acontiguous sequence of
    octets with a well-defined start and end,whether the sequence is named in static
    storage (e.g., "memo.pdf") oris unnamed and recently retrieved (e.g., a web page)
    from a networksocket. There are many filesystem entities that are not regularfiles,
    including directory nodes, block special files, and symboliclinks. In this document,
    the word "file" usually refers to a regularfile.A (regular) file is an oxum-ready
    stream. As a base case, a complexobject consisting of exactly one file has an
    oxum of the form"OCTETS.1", as in 12345.1Things get more interesting when dealing
    with more than one file.Any private or public agreement can be made about what
    constitutes afile group, hence a stream set, for the purposes of an oxumcomputation.
    A stream set might be declared to comprise all theattachments of an email message,
    or all the files resulting from anormalized dump procedure run against the tables
    of a database. Aneasily delineated group is all the files contained in a directory.Any
    recognized group of regular files can form on oxum stream set,including a simple
    manifest or list of filenames. For example, atransfer protocol might use oxum
    to help set the receiver''sexpectations in terms of total bytes and files contained
    in atransferred package [GRABIT].</p>'
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-kunze-oxum-00
doctype: internet-draft
