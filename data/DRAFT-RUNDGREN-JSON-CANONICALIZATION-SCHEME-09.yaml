---
id: I-D.rundgren-json-canonicalization-scheme
title:
  content: JSON Canonicalization Scheme (JCS)
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-rundgren-json-canonicalization-scheme-09.txt
  type: TXT
type: standard
docid:
- id: I-D.rundgren-json-canonicalization-scheme
  type: rfc-anchor
- id: draft-rundgren-json-canonicalization-scheme-09
  type: Internet-Draft
docnumber: I-D.rundgren-json-canonicalization-scheme
date:
  type: published
  value: '2019-09-14'
contributor:
- person:
    name:
      initial:
        content: A.
        language: en
      surname:
        content: Rundgren
        language: en
      completename:
        content: Anders Rundgren
        language: en
    affiliation:
      organization:
        name: Independent
  role: author
- person:
    name:
      initial:
        content: B.
        language: en
      surname:
        content: Jordan
        language: en
      completename:
        content: Bret Jordan
        language: en
    affiliation:
      organization:
        name: Symantec Corporation
  role: author
- person:
    name:
      initial:
        content: S.
        language: en
      surname:
        content: Erdtman
        language: en
      completename:
        content: Samuel Erdtman
        language: en
    affiliation:
      organization:
        name: Spotify AB
  role: author
revdate: '2019-09-14'
language: en
script: Latn
abstract:
  content: "\n\t <p>   Cryptographic operations like hashing and signing requires
    that the\n   data is expressed in an invariant format.  One way addressing this\n
    \  issue is creating a canonical form of the data.  Canonicalization\n   also
    permits data to be exchanged in its original form on the \"wire\"\n   while secure
    cryptographic operations are performed on its\n   canonicalized counterpart in
    the producer and consumer end points.\n   The JSON Canonicalization Scheme (JCS)
    provides canonicalization\n   support for data in the JSON format by building
    on the strict\n   serialization methods for JSON primitives defined by ECMAScript,\n
    \  constraining JSON data to the I-JSON subset, and through a\n   deterministic
    property sorting scheme.\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-rundgren-json-canonicalization-scheme-09
doctype: internet-draft
