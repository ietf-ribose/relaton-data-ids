---
id: I-Dhamilton-quic-transport-protocol
title:
- content: 'QUIC: A UDP-Based Multiplexed and Secure Transport'
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-hamilton-quic-transport-protocol-01.txt
  type: TXT
type: standard
docid:
- id: I-D hamilton-quic-transport-protocol
  type: IETF
- id: I-D.hamilton-quic-transport-protocol
  type: IETF
  scope: anchor
- id: draft-hamilton-quic-transport-protocol-01
  type: Internet-Draft
docnumber: I-D.hamilton-quic-transport-protocol
date:
- type: published
  value: '2016-10-31'
contributor:
- organization:
    name:
    - Internet Engineering Task Force
    abbreviation: IETF
  role:
  - publisher
- person:
    name:
      completename:
        content: Ryan Hamilton
        language:
        - en
  role:
  - author
- person:
    name:
      completename:
        content: Janardhan Iyengar
        language:
        - en
  role:
  - author
- person:
    name:
      completename:
        content: Ian Swett
        language:
        - en
  role:
  - author
- person:
    name:
      completename:
        content: Alyssa Wilk
        language:
        - en
  role:
  - author
revdate: '2016-10-31'
language:
- en
script:
- Latn
abstract:
- content: "<p>QUIC is a multiplexed and secure transport protocol that runs on top
    of UDP. QUIC builds on past transport experience, and implements mechanisms that
    make it useful as a modern general-purpose transport protocol. Using UDP as the
    basis of QUIC is intended to address compatibility issues with legacy clients
    and middleboxes. QUIC authenticates all of its headers, preventing third parties
    from from changing them. QUIC encrypts most of its headers, thereby limiting protocol
    evolution to QUIC endpoints only. Therefore, middleboxes, in large part, are not
    required to be updated as new protocol versions are deployed. This document describes
    the core QUIC protocol, including the conceptual design, wire format, and mechanisms
    of the QUIC protocol for connection establishment, stream multiplexing, stream
    and connection-level flow control, and data reliability. Accompanying documents
    describe QUIC's loss recovery and congestion control, and the use of TLS 1.3 for
    key negotiation.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
place:
- Fremont, CA
fetched: '2022-01-19'
doctype: internet-draft
