---
id: I-D.geng-iac-caba
title:
  content: Efficient Implementation Method for Loop-free Criterion
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-geng-iac-caba-00.txt
  type: TXT
type: standard
docid:
- id: I-D.geng-iac-caba
  type: rfc-anchor
- id: draft-geng-iac-caba-00
  type: Internet-Draft
docnumber: I-D.geng-iac-caba
date:
  type: published
  value: '2020-05-12'
contributor:
- person:
    name:
      completename:
        content: Haijun Geng
        language: en
    affiliation:
      organization:
        name: Shanxi Univ.
  role: author
- person:
    name:
      completename:
        content: Han Zhang
        language: en
    affiliation:
      organization:
        name: Beihang Univ.
  role: author
- person:
    name:
      completename:
        content: Xingang Shi
        language: en
    affiliation:
      organization:
        name: Tsinghua Univ.
  role: author
- person:
    name:
      completename:
        content: Zhiliang Wang
        language: en
    affiliation:
      organization:
        name: Tsinghua Univ.
  role: author
- person:
    name:
      completename:
        content: Xia Yin
        language: en
    affiliation:
      organization:
        name: Tsinghua Univ.
  role: author
revdate: '2020-05-12'
language: en
script: Latn
abstract:
  content: "\n\t <p>   [RFC5286] introduces Loop-Free Criterion (LFC) in detail, which
    is a\n   technology for local fast rerouting when network failures occur.\n   With
    LFC, alternate next hops are stored alongside with the default\n   next hops in
    a routers forwarding table, and can be immediately\n   activated to invoke a loop
    free repair path in face of link failure.\n   As long as not introducing routing
    loops, these alternative next hops\n   can also be used for multipath transmission
    if there are stringent\n   demands on bandwidth or load balancing.  However, in
    such link state\n   networks, computing loop free alternates typically requires
    one or\n   more rounds of full shortest path tree computation on a graph, and\n
    \  poses a heavy burden to both the processor load and the memory\n   consumption
    of a network equipment.  In this document, we describe an\n   efficient Loop-free
    Criterion (LFC) implementation method which is\n   based on incremental shortest
    path first (i-SPF), which is suitable\n   for practical deployment in large scale
    networks.  The computational\n   complexity of the method is independent of the
    average node degree of\n   the network.\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-geng-iac-caba-00
doctype: internet-draft
