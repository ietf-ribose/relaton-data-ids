---
id: I-D.tkeiser-afs3-volser-tlv
title:
  content: AFSVol Tag-Length-Value Remote Procedure Call Extensions
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-tkeiser-afs3-volser-tlv-03.txt
  type: TXT
type: standard
docid:
- id: I-D.tkeiser-afs3-volser-tlv
  type: rfc-anchor
- id: draft-tkeiser-afs3-volser-tlv-03
  type: Internet-Draft
docnumber: I-D.tkeiser-afs3-volser-tlv
date:
  type: published
  value: '2010-08-04'
contributor:
- person:
    name:
      initial:
        content: T.
        language: en
      surname:
        content: Keiser
        language: en
      completename:
        content: Thomas Keiser
        language: en
  role: author
- person:
    name:
      initial:
        content: S.
        language: en
      surname:
        content: Jenkins
        language: en
      completename:
        content: Steven Jenkins
        language: en
  role: author
revdate: '2010-08-04'
language: en
script: Latn
abstract:
  content: "\n\t <p>AFS-3 is a distributed file system based upon prototypes developed
    at\nCarnegie Mellon University during the 1980s.  AFS-3 heavily leverages\nRemote
    Procedure Calls (RPCs) as the foundation for its distributed\narchitecture.  In
    2003, new RPCs were introduced into AFS-3 that\nprovide for capability introspection
    between file servers and cache\nmanagers.  This memo introduces equivalent functionality
    to the\nvolume server RPC interface, thus making the volume management\ninterface
    more extensible.\n\nFurthermore, this memo extends the volume management interface
    to\nsupport getting and setting of AFS volume attributes via an\nextensible Tag-Length-Value
    (TLV) encoding, which is based upon XDR\ndiscriminated unions.  TLV-based get
    and set RPCs are specified,\nalong with a tag enumeration RPC.  The TLV encoding
    side-steps the\ntypical XDR union decode problem, whereby failure to decode a
    union\nleg causes the entire RPC payload decode to fail, by mandating an XDR\nopaque
    default leg for the union, along with a standard mechanism for\nencoding new leg
    types inside the XDR opaque blob.\n\nFinally, tags are allocated for existing
    volume and transaction\nmetadata, and implementation-private tags are allocated
    for metadata\nrelated to the OpenAFS Demand Attach File Server and RxOSD protocol.\n\nInternet
    Draft Comments\n\nComments regarding this draft are solicited.  Please include
    the\nAFS-3 protocol standardization mailing list\n(afs3-standardization@openafs.org)
    as a recipient of any comments.\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-tkeiser-afs3-volser-tlv-03
doctype: internet-draft
