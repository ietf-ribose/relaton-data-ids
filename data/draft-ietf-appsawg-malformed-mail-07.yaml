---
id: I-Dietf-appsawg-malformed-mail
title:
- content: Advice for Safe Handling of Malformed Messages
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-ietf-appsawg-malformed-mail-07.txt
  type: TXT
type: standard
docid:
- id: I-D ietf-appsawg-malformed-mail
  type: IETF
- id: I-D.ietf-appsawg-malformed-mail
  type: IETF
  scope: anchor
- id: draft-ietf-appsawg-malformed-mail-07
  type: Internet-Draft
docnumber: I-D.ietf-appsawg-malformed-mail
date:
- type: published
  value: '2013-07-13'
contributor:
- organization:
    name:
    - Internet Engineering Task Force
    abbreviation: IETF
  role:
  - publisher
- person:
    name:
      initial:
      - content: M.
        language:
        - en
      surname:
        content: Kucherawy
        language:
        - en
      completename:
        content: Murray Kucherawy
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: G. N.
        language:
        - en
      surname:
        content: Shapiro
        language:
        - en
      completename:
        content: Gregory N. Shapiro
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: N.
        language:
        - en
      surname:
        content: Freed
        language:
        - en
      completename:
        content: Ned Freed
        language:
        - en
  role:
  - author
revdate: '2013-07-13'
language:
- en
script:
- Latn
abstract:
- content: "<p>Although Internet mail formats have been precisely defined since the
    1970s, authoring and handling software often show only mild conformance to the
    specifications. The distributed and non- interactive nature of email has often
    prompted adjustments to receiving software, to handle these variations, rather
    than trying to gain better conformance by senders, since the receiving operator
    is primarily driven by complaining recipient users and has no authority over the
    sending side of the system. Processing with such flexibility comes at some cost,
    since mail software is faced with decisions about whether or not to permit non-conforming
    messages to continue toward their destinations unaltered, adjust them to conform
    (possibly at the cost of losing some of the original message), or outright rejecting
    them. A core requirement for interoperability is that both sides of an exchange
    work from the same details and semantics. By having receivers be flexible, beyond
    the specifications, there can be -- and often has been -- a good chance that a
    message will not be fully interoperable. Worse, a well-established pattern of
    tolerance for variations can sometimes be used as an attack vector. This document
    includes a collection of the best advice available regarding a variety of common
    malformed mail situations, to be used as implementation guidance. It must be emphasized,
    however, that the intent of this document is not to standardize malformations
    or otherwise encourage their proliferation. The messages are manifestly malformed,
    and the code and culture that generates them needs to be fixed. Therefore, these
    messages should be rejected outright if at all possible. Nevertheless, many malformed
    messages from otherwise legitimate senders are in circulation and will be for
    some time, and, unfortunately, commercial reality shows that we cannot always
    simply reject or discard them. Accordingly, this document presents alternatives
    for dealing with them in ways that seem to do the least additional harm until
    the infrastructure is tightened up to match the standards.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
place:
- Fremont, CA
fetched: '2022-01-21'
doctype: internet-draft
