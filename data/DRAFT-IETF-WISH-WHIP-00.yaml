---
id: I-D.ietf-wish-whip
title:
  content: WebRTC-HTTP ingestion protocol (WHIP)
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-ietf-wish-whip-00.txt
  type: TXT
type: standard
docid:
- id: I-D.ietf-wish-whip
  type: rfc-anchor
- id: draft-ietf-wish-whip-00
  type: Internet-Draft
docnumber: I-D.ietf-wish-whip
date:
  type: published
  value: '2021-08-26'
contributor:
- person:
    name:
      initial:
        content: S. G.
        language: en
      surname:
        content: Murillo
        language: en
      completename:
        content: Sergio Garcia Murillo
        language: en
    affiliation:
      organization:
        name: CoSMo Software
  role: author
- person:
    name:
      initial:
        content: A.
        language: en
      surname:
        content: Gouaillard
        language: en
      completename:
        content: Dr. Alex Gouaillard
        language: en
    affiliation:
      organization:
        name: CoSMo Software
  role: author
revdate: '2021-08-26'
language: en
script: Latn
abstract:
  content: "\n\t <p>   While WebRTC has been very successful in a wide range of scenarios,\n
    \  its adoption in the broadcasting/streaming industry is lagging\n   behind.
    \ Currently there is no standard protocol (like SIP or RTSP)\n   designed for
    ingesting media in a streaming service, and content\n   providers still rely heavily
    on protocols like RTMP for it.\n\n   These protocols are much older than webrtc
    and lack by default some\n   important security and resilience features provided
    by webrtc with\n   minimal delay.\n\n   The media codecs used in older protocols
    do not always match those\n   being used in WebRTC, mandating transcoding on the
    ingest node,\n   introducing delay and degrading media quality.  This transcoding
    step\n   is always present in traditional streaming to support e.g.  ABR, and\n
    \  comes at no cost.  However webrtc implements client-side ABR, also\n   called
    Network-Aware Encoding by e.g.  Huavision, by means of\n   simulcast and SVC codecs,
    which otherwise alleviate the need for\n   server-side transcoding.  Content protection
    and Privacy Enhancement\n   can be achieved with End-to-End Encryption, which
    preclude any\n   server-side media processing.\n\n   This document proposes a
    simple HTTP based protocol that will allow\n   WebRTC endpoints to ingest content
    into streaming services and/or\n   CDNs to fill this gap and facilitate deployment.\n\n\t
    </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-ietf-wish-whip-00
doctype: internet-draft
