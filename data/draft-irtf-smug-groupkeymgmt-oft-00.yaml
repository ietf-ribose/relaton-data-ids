---
id: I-D.irtf-smug-groupkeymgmt-oft
title:
  content: 'Key Management for Large Dynamic Groups: One-Way Function Trees and Amortized
    Initialization

    '
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-irtf-smug-groupkeymgmt-oft-00.txt
  type: TXT
type: standard
docid:
- id: I-D.irtf-smug-groupkeymgmt-oft
  type: rfc-anchor
- id: draft-irtf-smug-groupkeymgmt-oft-00
  type: Internet-Draft
docnumber: I-D.irtf-smug-groupkeymgmt-oft
date:
  type: published
  value: '2000-09-06'
contributor:
- person:
    name:
      initial:
        content: D. M.
        language: en
      surname:
        content: Balenson
        language: en
      completename:
        content: David M. Balenson
        language: en
    affiliation:
      organization:
        name: NAI Labs
  role: author
- person:
    name:
      initial:
        content: D.
        language: en
      surname:
        content: McGrew
        language: en
      completename:
        content: David McGrew
        language: en
    affiliation:
      organization:
        name: NAI Labs
  role: author
- person:
    name:
      initial:
        content: A. T.
        language: en
      surname:
        content: Sherman
        language: en
      completename:
        content: Dr. Alan T. Sherman
        language: en
  role: author
revdate: '2000-09-06'
language: en
script: Latn
abstract:
  content: "<p>We present and implement a scalable method for establishinggroup session
    keys for secure large, dynamic groups such asmulticast sessions. Our method is
    based on a novel applicationof One-Way Function Trees (OFTs). The number of keys
    stored bygroup members, the number of keys broadcast to the group whennew members
    are added or evicted, and the computational effortsof group members, are logarithmic
    in the number of group members.The method provides perfect forward and backward
    security:evicted members cannot read future messages, even with collusionby arbitrarily
    many evicted members, and newly admitted groupmembers cannot read previous messages.
    In comparison with theLogical Key Hierarchy (LKH) of Wallner et al., our algorithmroughly
    halves the number of bits that need to be broadcast tomembers in order to re-key
    after a member is added or evicted.In addition, and unlike LKH, our algorithm
    has the option of beingmember contributory in that members can be allowed to contributeentropy
    to the group key. Running on a Pentium with 64 MB of RAM,our prototype has handled
    groups with up to 100,000 members.</p>"
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-irtf-smug-groupkeymgmt-oft-00
doctype: internet-draft
