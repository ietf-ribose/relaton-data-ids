---
id: I-D.slevinski-formal-signwriting
title:
  content: Formal SignWriting
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-slevinski-formal-signwriting-03.txt
  type: TXT
type: standard
docid:
- id: I-D.slevinski-formal-signwriting
  type: rfc-anchor
- id: draft-slevinski-formal-signwriting-03
  type: Internet-Draft
docnumber: I-D.slevinski-formal-signwriting
date:
  type: published
  value: '2017-07-20'
contributor:
  person:
    name:
      initial:
        content: S. E.
        language: en
      surname:
        content: Slevinski
        language: en
      completename:
        content: Stephen E Slevinski Jr
        language: en
    affiliation:
      organization:
        name: Center for Sutton Movement Writing
  role: author
revdate: '2017-07-20'
language: en
script: Latn
abstract:
  content: "\n\t <p>   Sutton SignWriting is the universal and complete solution for
    written\n   sign language.  It has been applied by a wide and deep international\n
    \  community of sign language users.  Sutton SignWriting is an\n   international
    standard for writing sign languages by hand or with\n   computers.  From education
    to research, from entertainment to\n   religion, SignWriting has proven useful
    because people are using it\n   to write signed languages.\n\n   Formal SignWriting
    (FSW) is a faithful character-encoding of Sutton\n   SignWriting based on 2-dimensional
    mathematics.  FSW defines a formal\n   language for written sign languages where
    any sign of any sign\n   language can be written as a string of ASCII or Unicode
    characters.\n   The mathematical names are explained with tokens and regular\n
    \  expression patterns.  Signs are written in a spatial SignBox, where\n   each
    symbol is positioned with a 2-dimension Cartesian coordinate.\n   For sorting,
    each sign can have an optional temporal sequence of\n   symbols that is outside
    of the SignBox.  To create sentences, signs\n   are written sequentially, interspersed
    with punctuation symbols.\n\n   The styling string of Formal SignWriting uses
    a lite markup to define\n   a variety of styling options.  The entire sign can
    be customized for\n   padding, coloring, and size.  Individual symbols within
    a sign can be\n   customized for coloring and size.  For SVG, class names and
    IDs can\n   be defined.\n\n   The query language of Formal SignWriting uses a
    lite markup, similar\n   to FSW, to define a variety of searching possibilities.
    \ The spatial\n   SignBox can be searched for symbols or ranges of symbols.  For
    each\n   symbol or range, the search can specify if the symbol only needs to\n
    \  be found somewhere in the SignBox, or if the symbol needs to be found\n   near
    certain coordinates.  The temporal sequence can be searched for\n   starting symbols,
    written as a sequential list of symbols and ranges\n   of symbols.  When searching
    the temporal sequence, the search results\n   will be limited to signs that start
    with a matching temporal\n   sequence.  Each query string is transformed into
    one or more regular\n   expressions.  The regular expressions are used to quickly
    search\n   large amounts of data.\n\n   Formal SignWriting has been specifically
    designed to integrate with\n   standard technology on the phone, tablet, and desktop.
    \ Four main\n   components make this integration possible: 1) Fonts, 2) Scalar
    Vector\n   Graphics, 3) HTML and CSS, and 4) JavaScript.\n\n   Formal SignWriting
    as ASCII characters is compatible with and\n   optimized for UTF-8.  There are
    2 options for Formal SignWriting in\n   Unicode.  Option 1 is an alternate encoding
    that replaces the Sutton\n   SignWriting block in Unicode.  Option 1 focuses on
    small size, simple\n   design, and ease of use.  Option 2 is an encoding that
    is 97.5%\n   official Unicode with defined characters in the Sutton SignWriting\n
    \  block.  Option 2 focuses on augmenting the Unicode 8 standard with 17\n   new
    control characters for a design that is compatible with Formal\n   SignWriting.\n\n
    \  This memo defines a conceptual character encoding map for the\n   Internet
    community.  It is published for reference, examination,\n   implementation, and
    evaluation.  Distribution of this memo is\n   unlimited.\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-slevinski-formal-signwriting-03
doctype: internet-draft
