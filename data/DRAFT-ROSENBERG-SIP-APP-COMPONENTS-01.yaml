---
id: I-D.rosenberg-sip-app-components
title:
  content: An Application Server Component Architecture for SIP
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-rosenberg-sip-app-components-01.txt
  type: TXT
type: standard
docid:
- id: I-D.rosenberg-sip-app-components
  type: rfc-anchor
- id: draft-rosenberg-sip-app-components-01
  type: Internet-Draft
docnumber: I-D.rosenberg-sip-app-components
date:
  type: published
  value: '2001-03-09'
contributor:
- person:
    name:
      initial:
        content: J.
        language: en
      surname:
        content: Rosenberg
        language: en
      completename:
        content: Jonathan Rosenberg
        language: en
  role: author
- person:
    name:
      initial:
        content: H.
        language: en
      surname:
        content: Schulzrinne
        language: en
      completename:
        content: Henning Schulzrinne
        language: en
  role: author
revdate: '2001-03-09'
language: en
script: Latn
abstract:
  content: "\n\t <p>An application server is defined as an entity that is capable
    of\nproviding advanced features to users. Examples of features include\ncall forwarding,
    call screening, debit card calling, web interactive\nvoice response, etc. However,
    the set of functions needed to enable a\nbroad range of such applications is quite
    large - it includes speech\nrecognition, DTMF recognition and digit collection,
    text-to-speech\nsynthesis, database interfacing, audio and video coding and decoding,\naudio
    and video bridging and mixing, and signaling, to name a few.\nSupporting such
    a large set of functions on the same box presents a\nmajor challenge. To solve
    this problem, the industry is proposing a\ndecomposition of the application server
    into two components - a media\nserver that handles the media component, and an
    application server\nthat handles the call control, data, and signaling. The interface\nthat
    has been proposed between these two elements is a control\nmechanism along the
    lines of MGCP or Megaco. In this paper, we\npropose an orthogonal decomposition,
    which breaks an application\nserver into application server components. Each component
    represents\na application server in its own right, but it provides a well defined\ncomponent
    that by itself may be a complete, but simpler, application.\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-rosenberg-sip-app-components-01
doctype: internet-draft
