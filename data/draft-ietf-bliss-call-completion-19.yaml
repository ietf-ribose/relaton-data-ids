---
id: I-Dietf-bliss-call-completion
title:
- content: Completion of Calls for the Session Initiation Protocol (SIP)
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-ietf-bliss-call-completion-19.txt
  type: TXT
type: standard
docid:
- id: I-D ietf-bliss-call-completion
  type: IETF
  primary: true
- id: I-D.ietf-bliss-call-completion
  type: IETF
  scope: anchor
- id: draft-ietf-bliss-call-completion-19
  type: Internet-Draft
docnumber: I-D.ietf-bliss-call-completion
date:
- type: published
  value: '2013-02-11'
contributor:
- organization:
    name:
    - Internet Engineering Task Force
    abbreviation: IETF
  role:
  - publisher
- person:
    name:
      completename:
        content: Dale R. Worley
        language:
        - en
  role:
  - author
- person:
    name:
      completename:
        content: Martin Huelsemann
        language:
        - en
  role:
  - author
- person:
    name:
      completename:
        content: Roland Jesske
        language:
        - en
  role:
  - author
- person:
    name:
      completename:
        content: Denis Alexeitsev
        language:
        - en
  role:
  - author
revdate: '2013-02-11'
language:
- en
script:
- Latn
abstract:
- content: <p>The "completion of calls" feature defined in this specification allows
    the caller of a failed call to be notified when the callee becomes available to
    receive a call. For the realization of a basic solution without queuing, this
    document references the usage of the dialog event package (RFC 4235) that is described
    as 'Automatic Redial' in "Session Initiation Protocol Service Examples" (RFC 5359).
    For the realization of a more comprehensive solution with queuing, this document
    introduces an architecture for implementing these features in the Session Initiation
    Protocol where "completion of calls" implementations associated with the caller's
    and callee's endpoints cooperate to place the caller's request for completion
    of calls into a queue at the callee's endpoint; when a caller's request is ready
    to be serviced, re-attempt of the original, failed call is then made. The architecture
    is designed to interoperate well with existing completion of calls solutions in
    other networks.</p>
  language:
  - en
  script:
  - Latn
  format: text/html
fetched: '2022-02-14'
doctype: internet-draft
