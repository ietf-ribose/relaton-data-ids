---
id: I-Djoseph-pkix-p6rsshextension
title:
- content: P6R's Secure Shell Public Key Subsystem
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-joseph-pkix-p6rsshextension-01.txt
  type: TXT
type: standard
docid:
- id: I-D joseph-pkix-p6rsshextension
- id: I-D.joseph-pkix-p6rsshextension
  scope: anchor
- id: draft-joseph-pkix-p6rsshextension-01
  type: Internet-Draft
docnumber: I-D.joseph-pkix-p6rsshextension
date:
- type: published
  value: '2013-05-30'
contributor:
- person:
    name:
      initial:
      - content: M.
        language:
        - en
      surname:
        content: Joseph
        language:
        - en
      completename:
        content: Mark Joseph
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: J.
        language:
        - en
      surname:
        content: Susoy
        language:
        - en
      completename:
        content: Jim Susoy
        language:
        - en
  role:
  - author
revdate: '2013-05-30'
language:
- en
script:
- Latn
abstract:
- content: "<p>The Secure Shell Public Key Subsystem protocol defines a key distribution
    protocol to provision an SSH server with user's public keys. However, that protocol
    is limited to provisioning an SSH server. This document describes a new protocol
    that builds on the protocol defined in RFC 4819 to allow the provisioning of keys
    and certificates to a server using the SSH transport. The new protocol allows
    the calling client to organize keys and certificates in different namespaces on
    a server. These namespaces can be used by the server to allow a client to configure
    any application running on the server (e.g., SSH, KMIP, SNMP). The new protocol
    provides a server-independent mechanism for clients to add public keys, remove
    public keys, add certificates, remove certificates, and list the current set of
    keys and certificates known by the server by namespace (e.g., list all public
    keys in the SSH namespace). Rights to manage keys and certificates in a specific
    namespace are specific and limited to the authorized user and are defined as part
    of the server's implementation. The described protocol is backward compatible
    to version 2 defined by RFC 4819.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
doctype: internet-draft
