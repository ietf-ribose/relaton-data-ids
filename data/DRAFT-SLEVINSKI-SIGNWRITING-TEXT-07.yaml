---
id: I-D.slevinski-signwriting-text
title:
  content: The SignPuddle Standard for SignWriting Text
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-slevinski-signwriting-text-07.txt
  type: TXT
type: standard
docid:
- id: I-D.slevinski-signwriting-text
  type: rfc-anchor
- id: draft-slevinski-signwriting-text-07
  type: Internet-Draft
docnumber: I-D.slevinski-signwriting-text
date:
  type: published
  value: '2016-05-09'
contributor:
  person:
    name:
      completename:
        content: Stephen E Slevinski Jr
        language: en
  role: author
revdate: '2016-05-09'
language: en
script: Latn
abstract:
  content: "\n\t <p>   For concreteness, because the universal character set is not
    yet\n   universal, and because an international standard for the internet\n   community
    should be documented and stable, this I-D has been released\n   with the intention
    of producing an RFC to document the character use\n   and naming conventions of
    the SignWriting community on the Internet.\n\n   The SignWriting Script is an
    international standard for writing sign\n   languages by hand or with computers.
    \ From education to research,\n   from entertainment to religion, SignWriting
    has proven useful because\n   people are using it to write signed languages.  The
    SignWriting\n   Script has two major families: Block Printing for the reader and\n
    \  Handwriting for the writer.\n\n   Formal SignWriting uses ASCII strings to
    name logographic signs.  The\n   mathematical names are explained with tokens
    and regular expression\n   patterns.  Symbol keys reference the symbols of the
    International\n   SignWriting Alphabet 2010.  Coordinates define X and Y number
    values\n   for 2-dimensional placement.  Signs are written in a spatial SignBox,\n
    \  where each symbol is positioned with a 2-dimension coordinate.  For\n   sorting,
    each sign can have an optional temporal sequence of symbols\n   that is outside
    of the SignBox and the visible text.  To create\n   sentences, completed signs
    are written sequentially, interspersed\n   with punctuation symbols.\n\n   The
    query language of Formal SignWriting uses a lite markup, similar\n   to FSW, to
    define a variety of searching possibilities.  The spatial\n   SignBox can be searched
    for symbols or ranges of symbols.  For each\n   symbol or range, the search can
    specify if the symbol only needs to\n   be found somewhere in the SignBox, or
    if the symbol needs to be found\n   near certain coordinates.  The temporal sequence
    can be searched for\n   starting symbols, written as a sequential list of symbols
    and ranges\n   of symbols.  When searching the temporal sequence, the search results\n
    \  will be limited to signs that start with a matching temporal\n   sequence.
    \ Each query string is transformed into one or more regular\n   expressions.  The
    regular expressions are used to quickly search\n   large amounts of data.\n\n
    \  The styling string of Formal SignWriting uses a lite markup to define\n   a
    variety of styling options.  The entire sign can be customized for\n   padding,
    coloring, and size.  Individual symbols within a sign can be\n   customized for
    coloring and size.\n\n   SignWriting 2010 is the modern implementation and international\n
    \  specification of the SignWriting Script for the internet community\n   that
    includes TrueType Fonts and a compact JavaScript library.\n   SignMaker is a standards
    based editor, utilizing HTML, CSS,\n   JavaScript, SVG, TrueType Fonts, and PNG
    images.  SignMaker can be\n   used to create a private dictionary or to view dozens
    of sign\n   language dictionaries derived from SignPuddle Online.\n\n   For Unicode,
    there are several encodings possibilities.  Formal\n   SignWriting is UTF-8.  The
    plane 15 encoding is isomorphic with\n   Formal SignWriting strings, using 3 characters
    for each symbol, along\n   with structural marker characters and number characters.
    \ The plane\n   16 encoding is focused on the symbols only, using 1 character
    for\n   each symbol.  The Unicode 8 specification uses 1 to 3 characters on\n
    \  plane 1 to name each symbol of the International SignWriting Alphabet\n   2010.\n\n
    \  Three appendices discuss additional topics to the standard.  The\n   first
    discusses the Modern SignWriting theory and example document,\n   stable since
    January 12, 2012.  The second discusses the symbol\n   encoding of the International
    SignWriting Alphabet 2010.  The third\n   discusses the SignPuddle Standards:
    licences, infrastructure, and\n   compatibility.\n\n   This memo concretely defines
    a conceptual character encoding map for\n   the Internet community.  It is published
    for reference, examination,\n   implementation, and evaluation.  Distribution
    of this memo is\n   unlimited.\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-slevinski-signwriting-text-07
doctype: internet-draft
