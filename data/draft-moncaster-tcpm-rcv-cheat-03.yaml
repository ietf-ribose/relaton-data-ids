---
id: I-Dmoncaster-tcpm-rcv-cheat
title:
- content: A TCP Test to Allow Senders to Identify Receiver Non-Compliance
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-moncaster-tcpm-rcv-cheat-03.txt
  type: TXT
type: standard
docid:
- id: I-D moncaster-tcpm-rcv-cheat
  type: IETF
  primary: true
- id: I-D.moncaster-tcpm-rcv-cheat
  type: IETF
  scope: anchor
- id: draft-moncaster-tcpm-rcv-cheat-03
  type: Internet-Draft
docnumber: I-D.moncaster-tcpm-rcv-cheat
date:
- type: published
  value: 2014-07
contributor:
- organization:
    name:
    - Internet Engineering Task Force
    abbreviation: IETF
  role:
  - publisher
- person:
    name:
      completename:
        content: Toby Moncaster
        language:
        - en
  role:
  - author
- person:
    name:
      completename:
        content: Bob Briscoe
        language:
        - en
  role:
  - author
- person:
    name:
      completename:
        content: Arnaud Jacquet
        language:
        - en
  role:
  - author
revdate: 2014-07
language:
- en
script:
- Latn
abstract:
- content: "<p>The TCP protocol relies on receivers sending accurate and timely feedback
    to the sender. Currently the sender has no means to verify that a receiver is
    correctly sending this feedback according to the protocol. A receiver that is
    non-compliant has the potential to disrupt a sender's resource allocation, increasing
    its transmission rate on that connection which in turn could adversely affect
    the network itself. This document presents a two stage test process that can be
    used to identify whether a receiver is non-compliant. The tests enshrine the principle
    that one shouldn't attribute to malice that which may be accidental. The first
    stage test causes minimum impact to the receiver but raises a suspicion of non-compliance.
    The second stage test can then be used to verify that the receiver is non-compliant.
    This specification does not modify the core TCP protocol - the tests can either
    be implemented as a test suite or as a stand-alone test through a simple modification
    to the sender implementation.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
fetched: '2022-02-11'
doctype: internet-draft
