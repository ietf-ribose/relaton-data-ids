---
id: I-Dhapner-hybi-messagebroker-subprotocol
title:
- content: The MessageBroker WebSocket Subprotocol
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-hapner-hybi-messagebroker-subprotocol-00.txt
  type: TXT
type: standard
docid:
- id: I-D hapner-hybi-messagebroker-subprotocol
  type: IETF
  primary: true
- id: I-D.hapner-hybi-messagebroker-subprotocol
  type: IETF
  scope: anchor
- id: draft-hapner-hybi-messagebroker-subprotocol-00
  type: Internet-Draft
docnumber: I-D.hapner-hybi-messagebroker-subprotocol
date:
- type: published
  value: 2011-10
contributor:
- person:
    name:
      initial:
      - content: M.
        language:
        - en
      surname:
        content: Hapner
        language:
        - en
      completename:
        content: Mark Hapner
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: C.
        language:
        - en
      surname:
        content: Suconic
        language:
        - en
      completename:
        content: Clebert Suconic
        language:
        - en
  role:
  - author
revdate: 2011-10
language:
- en
script:
- Latn
abstract:
- content: "<p>The WebSocket protocol [I-D.ietf-hybi-thewebsocketprotocol] provides
    a subprotocol extension facility. The MessageBroker WebSocket Subprotocol (MBWS)
    is a WebSocket Subprotocol used by messaging clients to send messages to, and
    receive messages from an internet message broker (herein called a message broker).
    A message broker is a messaging intermediary that queues messages sent by its
    clients for asynchronous delivery to its clients. Messages are addressed to message-broker-specific
    address names. Clients send messages to addresses and consume messages from addresses.
    Clients do not send messages directly to other clients. Message brokers provide
    a range of functionality that is outside the scope of MBWS. Typically an internet
    message broker provides a REST API for working with this functionality; such as
    configuring client credentials; setting client access controls; configuring address
    routing; etc. MBWS limits its scope to the definition of a WebSocket subprotocol
    that provides a full duplex, reliable message transport protocol between message
    brokers and their clients; and, between message brokers. Since reliable message
    transport is often independent of a broker's particular features, MBWS can be
    used as the message transport protocol for a wide range of message brokers. MBWS
    utilizes two elements of WebSocket extensibility - opcodes and extension data.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
fetched: '2022-02-22'
doctype: internet-draft
