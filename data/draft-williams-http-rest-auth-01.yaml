---
id: I-Dwilliams-http-rest-auth
title:
- content: RESTful Authentication Pattern for the Hypertext Transport Protocol (HTTP)
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-williams-http-rest-auth-01.txt
  type: TXT
type: standard
docid:
- id: I-D williams-http-rest-auth
  type: IETF
  primary: true
- id: I-D.williams-http-rest-auth
  type: IETF
  scope: anchor
- id: draft-williams-http-rest-auth-01
  type: Internet-Draft
docnumber: I-D.williams-http-rest-auth
date:
- type: published
  value: '2012-08-13'
contributor:
- person:
    name:
      initial:
      - content: N.
        language:
        - en
      surname:
        content: Williams
        language:
        - en
      completename:
        content: Nicol√°s Williams
        language:
        - en
  role:
  - author
revdate: '2012-08-13'
language:
- en
script:
- Latn
abstract:
- content: '<p>This document proposes a "RESTful" pattern of authentication for HTTP/1.0,
    1.1, and 2.0. The existing 401 status code and WWW- Authenticate header are used
    to indicate that authentication is required and for negotiation purposes. The
    client POSTs an initial authentication message to an indicated login URI, and
    reply messages are returned as new representations of a session resource named
    by a session URI. This approach has a number of benefits: it can be implemented
    with or without help from the HTTP stack, it can be universally implemented on
    the server side using the Common Information Gateway (CGI) and FastCGI, it results
    in a session Uniform Resource Identifier (URI) that can be DELETEd to logout,
    it is completely orthogonal to any HTTP "routers" and proxies, and it naturally
    (i.e., without changing HTTP) handles multi-legged authentication mechanisms.
    Among other features supported are: channel binding, an optional round trip optimization
    for challenge/response mechanisms, some cryptographic protection options for clients
    that don''t use Transport Layer Security (TLS), stronger authentication of servers/services
    to users (where authentication mechanisms provide that) and more.</p>'
  language:
  - en
  script:
  - Latn
  format: text/html
fetched: '2022-03-01'
doctype: internet-draft
