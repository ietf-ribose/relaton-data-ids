---
id: I-D.iyengar-minion-concept
title:
  content: Minion - Service Model and Conceptual API
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-iyengar-minion-concept-01.txt
  type: TXT
type: standard
docid:
- id: I-D.iyengar-minion-concept
  type: rfc-anchor
- id: draft-iyengar-minion-concept-01
  type: Internet-Draft
docnumber: I-D.iyengar-minion-concept
date:
  type: published
  value: '2013-07-15'
contributor:
- person:
    name:
      initial:
        content: J.
        language: en
      surname:
        content: Iyengar
        language: en
      completename:
        content: Jana Iyengar
        language: en
  role: author
- person:
    name:
      initial:
        content: S.
        language: en
      surname:
        content: Cheshire
        language: en
      completename:
        content: Stuart Cheshire
        language: en
  role: author
- person:
    name:
      initial:
        content: J.
        language: en
      surname:
        content: Graessley
        language: en
      completename:
        content: Josh Graessley
        language: en
  role: author
revdate: '2013-07-15'
language: en
script: Latn
abstract:
  content: "\n\t <p>   Minion uses TCP-format packets on-the-wire, to provide full\n
    \  compatibility with existing NATs, Firewalls, and similar middleboxes,\n   but
    provides a richer set of facilities to the application.  Minion's\n   richer facilities
    include a message-oriented API rather than TCP's\n   unstructured byte-stream
    service model, multiplexing of multiple\n   messages (or message streams) on a
    single connection, interleaving of\n   multiplexed messages (to eliminate head-of-line
    blocking), message\n   cancellation, request/reply support, ordered and unordered
    messages,\n   chained messages, multiple priority levels with byte-granularity\n
    \  preemption, and DTLS Security.  Minion can be implemented entirely as\n   a
    user-level library, without waiting for any special support from OS\n   vendors,
    and provides immediate benefits to application developers.\n   Additionally, Minion
    is able to take advantage of some simple kernel\n   extensions to provide enhanced
    services that go beyond what is\n   possible with traditional TCP.  These kernel
    extensions are optional,\n   and even without them, Minion offers worthwhile benefits
    to\n   application developers.\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-iyengar-minion-concept-01
doctype: internet-draft
