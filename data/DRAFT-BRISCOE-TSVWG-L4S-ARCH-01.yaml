---
id: I-D.briscoe-tsvwg-l4s-arch
title:
  content: 'Low Latency, Low Loss, Scalable Throughput (L4S) Internet Service: Architecture'
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-briscoe-tsvwg-l4s-arch-01.txt
  type: TXT
type: standard
docid:
- id: I-D.briscoe-tsvwg-l4s-arch
  type: rfc-anchor
- id: draft-briscoe-tsvwg-l4s-arch-01
  type: Internet-Draft
docnumber: I-D.briscoe-tsvwg-l4s-arch
date:
  type: published
  value: '2017-03-13'
contributor:
- person:
    name:
      initial:
        content: B.
        language: en
      surname:
        content: Briscoe
        language: en
      completename:
        content: Bob Briscoe
        language: en
  role: author
- person:
    name:
      initial:
        content: K.
        language: en
      surname:
        content: De Schepper
        language: en
      completename:
        content: Koen De Schepper
        language: en
  role: author
- person:
    name:
      initial:
        content: M.
        language: en
      surname:
        content: Bagnulo
        language: en
      completename:
        content: Marcelo Bagnulo
        language: en
  role: author
revdate: '2017-03-13'
language: en
script: Latn
abstract:
  content: "\n\t <p>   This document describes the L4S architecture for the provision
    of a\n   new service that the Internet could provide to eventually replace\n   best
    efforts for all traffic: Low Latency, Low Loss, Scalable\n   throughput (L4S).
    \ It is becoming common for _all_ (or most)\n   applications being run by a user
    at any one time to require low\n   latency.  However, the only solution the IETF
    can offer for ultra-low\n   queuing delay is Diffserv, which only favours a minority
    of packets\n   at the expense of others.  In extensive testing the new L4S service\n
    \  keeps average queuing delay under a millisecond for _all_\n   applications
    even under very heavy load, without sacrificing\n   utilization; and it keeps
    congestion loss to zero.  It is becoming\n   widely recognized that adding more
    access capacity gives diminishing\n   returns, because latency is becoming the
    critical problem.  Even with\n   a high capacity broadband access, the reduced
    latency of L4S\n   remarkably and consistently improves performance under load
    for\n   applications such as interactive video, conversational video, voice,\n
    \  Web, gaming, instant messaging, remote desktop and cloud-based apps\n   (even
    when all being used at once over the same access link).  The\n   insight is that
    the root cause of queuing delay is in TCP, not in the\n   queue.  By fixing the
    sending TCP (and other transports) queuing\n   latency becomes so much better
    than today that operators will want to\n   deploy the network part of L4S to enable
    new products and services.\n   Further, the network part is simple to deploy -
    incrementally with\n   zero-config.  Both parts, sender and network, ensure coexistence
    with\n   other legacy traffic.  At the same time L4S solves the long-\n   recognized
    problem with the future scalability of TCP throughput.\n\n   This document describes
    the L4S architecture, briefly describing the\n   different components and how
    the work together to provide the\n   aforementioned enhanced Internet service.\n\n\t
    </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-briscoe-tsvwg-l4s-arch-01
doctype: internet-draft
