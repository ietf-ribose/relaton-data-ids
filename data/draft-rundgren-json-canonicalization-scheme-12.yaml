---
id: draft-rundgren-json-canonicalization-scheme-12
title:
- content: JSON Canonicalization Scheme (JCS)
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-rundgren-json-canonicalization-scheme-12.txt
  type: TXT
type: standard
docid:
- id: draft-rundgren-json-canonicalization-scheme-12
  type: Internet-Draft
  primary: true
- id: I-D.rundgren-json-canonicalization-scheme
  type: IETF
  scope: anchor
docnumber: I-D.rundgren-json-canonicalization-scheme
date:
- type: published
  value: '2019-09-27'
contributor:
- person:
    name:
      initial:
      - content: A.
        language:
        - en
      surname:
        content: Rundgren
        language:
        - en
      completename:
        content: Anders Rundgren
        language:
        - en
    affiliation:
    - organization:
        name:
        - Independent
  role:
  - author
- person:
    name:
      initial:
      - content: B.
        language:
        - en
      surname:
        content: Jordan
        language:
        - en
      completename:
        content: Bret Jordan
        language:
        - en
    affiliation:
    - organization:
        name:
        - Symantec Corporation
  role:
  - author
- person:
    name:
      initial:
      - content: S.
        language:
        - en
      surname:
        content: Erdtman
        language:
        - en
      completename:
        content: Samuel Erdtman
        language:
        - en
    affiliation:
    - organization:
        name:
        - Spotify AB
  role:
  - author
version:
  draft:
  - '12'
revdate: '2019-09-27'
language:
- en
script:
- Latn
abstract:
- content: <p>Cryptographic operations like hashing and signing need the data to be
    expressed in an invariant format so that the operations are reliably repeatable.
    One way to address this is to create a canonical representation of the data. Canonicalization
    also permits data to be exchanged in its original form on the "wire" while cryptographic
    operations performed on the canonicalized counterpart of the data in the producer
    and consumer end points, generate consistent results. This document describes
    the JSON Canonicalization Scheme (JCS). The JCS specification defines how to create
    a canonical representation of JSON data by building on the strict serialization
    methods for JSON primitives defined by ECMAScript, constraining JSON data to the
    I-JSON subset, and by using deterministic property sorting.</p>
  language:
  - en
  script:
  - Latn
  format: text/html
relation:
- type: updates
  bibitem:
    id: draft-rundgren-json-canonicalization-scheme-11
    docid:
    - id: draft-rundgren-json-canonicalization-scheme-11
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-rundgren-json-canonicalization-scheme-11
      format: text/plain
- type: updatedBy
  bibitem:
    id: draft-rundgren-json-canonicalization-scheme-13
    docid:
    - id: draft-rundgren-json-canonicalization-scheme-13
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-rundgren-json-canonicalization-scheme-13
      format: text/plain
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-rundgren-json-canonicalization-scheme-12
fetched: '2022-06-13'
doctype: internet-draft
