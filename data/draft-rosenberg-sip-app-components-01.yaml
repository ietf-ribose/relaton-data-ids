---
id: I-D.rosenberg-sip-app-components
title:
  content: An Application Server Component Architecture for SIP
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-rosenberg-sip-app-components-01.txt
  type: TXT
type: standard
docid:
- id: I-D.rosenberg-sip-app-components
  type: rfc-anchor
- id: draft-rosenberg-sip-app-components-01
  type: Internet-Draft
docnumber: I-D.rosenberg-sip-app-components
date:
  type: published
  value: '2001-03-09'
contributor:
- person:
    name:
      initial:
        content: J.
        language: en
      surname:
        content: Rosenberg
        language: en
      completename:
        content: Jonathan Rosenberg
        language: en
  role: author
- person:
    name:
      initial:
        content: H.
        language: en
      surname:
        content: Schulzrinne
        language: en
      completename:
        content: Henning Schulzrinne
        language: en
  role: author
revdate: '2001-03-09'
language: en
script: Latn
abstract:
  content: "\t <t>An application server is defined as an entity that is capable ofproviding
    advanced features to users. Examples of features includecall forwarding, call
    screening, debit card calling, web interactivevoice response, etc. However, the
    set of functions needed to enable abroad range of such applications is quite large
    - it includes speechrecognition, DTMF recognition and digit collection, text-to-speechsynthesis,
    database interfacing, audio and video coding and decoding,audio and video bridging
    and mixing, and signaling, to name a few.Supporting such a large set of functions
    on the same box presents amajor challenge. To solve this problem, the industry
    is proposing adecomposition of the application server into two components - a
    mediaserver that handles the media component, and an application serverthat handles
    the call control, data, and signaling. The interfacethat has been proposed between
    these two elements is a controlmechanism along the lines of MGCP or Megaco. In
    this paper, wepropose an orthogonal decomposition, which breaks an applicationserver
    into application server components. Each component representsa application server
    in its own right, but it provides a well definedcomponent that by itself may be
    a complete, but simpler, application.</p>"
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-rosenberg-sip-app-components-01
doctype: internet-draft
