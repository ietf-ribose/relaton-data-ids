---
id: draft-hamilton-quic-transport-protocol-00
title:
- content: 'QUIC: A UDP-Based Multiplexed and Secure Transport'
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-hamilton-quic-transport-protocol-00.txt
  type: TXT
type: standard
docid:
- id: draft-hamilton-quic-transport-protocol-00
  type: Internet-Draft
  primary: true
- id: I-D.hamilton-quic-transport-protocol
  type: IETF
  scope: anchor
docnumber: I-D.hamilton-quic-transport-protocol
date:
- type: published
  value: 2016-07
contributor:
- person:
    name:
      initial:
      - content: R.
        language:
        - en
      surname:
        content: Hamilton
        language:
        - en
      completename:
        content: Ryan Hamilton
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: J.
        language:
        - en
      surname:
        content: Iyengar
        language:
        - en
      completename:
        content: Jana Iyengar
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: I.
        language:
        - en
      surname:
        content: Swett
        language:
        - en
      completename:
        content: Ian Swett
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: A.
        language:
        - en
      surname:
        content: Wilk
        language:
        - en
      completename:
        content: Alyssa Wilk
        language:
        - en
  role:
  - author
revdate: 2016-07
language:
- en
script:
- Latn
abstract:
- content: "<p>QUIC (Quick UDP-based Internet Connection) is a multiplexed and secure
    transport protocol that runs on top of UDP. QUIC builds on past transport experience,
    and implements mechanisms that make it useful as a modern general-purpose transport
    protocol. Using UDP as the basis of QUIC is intended to address compatibility
    issues with legacy clients and middleboxes. QUIC authenticates all of its headers,
    preventing third parties from from changing them. QUIC encrypts most of its headers,
    thereby limiting protocol evolution to QUIC endpoints only. Therefore, middleboxes,
    in large part, are not required to be updated as new protocol versions are deployed.
    This document describes the core QUIC protocol, including the conceptual design,
    wire format, and mechanisms of the QUIC protocol for connection establishment,
    stream multiplexing, stream and connection- level flow control, and data reliability.
    Accompanying documents describe QUIC's loss recovery and congestion control, and
    the use of TLS1.3 for key negotiation.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-hamilton-quic-transport-protocol-00
fetched: '2022-03-12'
doctype: internet-draft
