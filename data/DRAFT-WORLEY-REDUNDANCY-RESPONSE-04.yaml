---
id: I-D.worley-redundancy-response
title:
  content: Supporting Multiple Path Routing in the Session Initiation Protocol (SIP)
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-worley-redundancy-response-04.txt
  type: TXT
type: standard
docid:
- id: I-D.worley-redundancy-response
  type: rfc-anchor
- id: draft-worley-redundancy-response-04
  type: Internet-Draft
docnumber: I-D.worley-redundancy-response
date:
  type: published
  value: '2009-03-06'
contributor:
  person:
    name:
      completename:
        content: Dale Worley
        language: en
  role: author
revdate: '2009-03-06'
language: en
script: Latn
abstract:
  content: "\n\t <p>An increasing number of SIP architectures implement multiple path\nrouting
    (MPR), which is the providing of more than one path for a\ncall to reach a destination
    user agent (UA).  A typical example is a\nredundant pair of gateways from a SIP
    system to the PSTN.  A call\nfrom the SIP system to the PSTN can pass through
    either gateway to\nultimately reach the destination telephone.  In order to gain
    the\nbenefits of redundancy in case one of the gateways fails or reaches\ncapacity,
    a proxy forks INVITEs serially to both gateways.\n\nUnfortunately, if the call
    passes through one gateway but fails at\nthe destination phone (e.g., ring-no-answer),
    the proxy will then\nfork the call to the other gateway, because the proxy has
    no way to\nknow that the call failed at the destination phone rather than at the\nfirst
    gateway.  The second fork will fail in the same way at the same\ndestination phone.
    \ This annoys both the caller (because the call\ntakes twice as long as it should
    before failing) and anyone within\nearshot of the destination phone.  Similar
    failures plague any other\nSIP architecture where a request can reach a destination
    through\nmultiple paths.\n\nTo gain the benefits of MPR without suffering from
    this problem, the\nproxy which forks a request onto the redundant paths needs
    to be able\nto determine if a fork that failed reached the destination UA and
    was\nrejected by the UA (and so an alternate path should not be tried), or\nif
    the fork failed before reaching the UA (and so an alternate path\nshould be attempted).
    \ This document is to begin a discussion of\nstrategies for making this determination.\n\t
    </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-worley-redundancy-response-04
doctype: internet-draft
