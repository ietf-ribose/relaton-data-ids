---
id: I-D.ietf-appsawg-malformed-mail
title:
  content: Advice for Safe Handling of Malformed Messages
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-ietf-appsawg-malformed-mail-04.txt
  type: TXT
type: standard
docid:
- id: I-D.ietf-appsawg-malformed-mail
  type: rfc-anchor
- id: draft-ietf-appsawg-malformed-mail-04
  type: Internet-Draft
docnumber: I-D.ietf-appsawg-malformed-mail
date:
  type: published
  value: '2013-05-17'
contributor:
- person:
    name:
      initial:
        content: M.
        language: en
      surname:
        content: Kucherawy
        language: en
      completename:
        content: Murray Kucherawy
        language: en
  role: author
- person:
    name:
      initial:
        content: G. N.
        language: en
      surname:
        content: Shapiro
        language: en
      completename:
        content: Gregory N. Shapiro
        language: en
  role: author
revdate: '2013-05-17'
language: en
script: Latn
abstract:
  content: "\n\t <p>   Although Internet mail formats have been precisely defined
    since the\n   1970s, authoring and handling software often show only mild\n   conformance
    to the specifications.  The distributed and non-\n   interactive nature of email
    has often prompted adjustments to\n   receiving software, to handle these variations,
    rather than trying to\n   gain better conformance by senders, since the receiving
    operator is\n   primarily driven by complaining recipient users and has no authority\n
    \  over the sending side of the system.  Processing with such\n   flexibility
    comes at some cost, since mail software is faced with\n   decisions about whether
    or not to permit non-conforming messages to\n   continue toward their destinations
    unaltered, adjust them to conform\n   (possibly at the cost of losing some of
    the original message), or\n   outright rejecting them.\n\n   A core requirement
    for interoperability is that both sides of an\n   exchange work from the same
    details and semantics.  By having\n   receivers be flexible, beyond the specifications,
    there can be -- and\n   often has been -- a good chance that a message will not
    be fully\n   interoperable.  Worse, a well-established pattern of tolerance for\n
    \  variations can sometimes be used as an attack vector.\n\n   This document includes
    a collection of the best advice available\n   regarding a variety of common malformed
    mail situations, to be used\n   as implementation guidance.  It must be emphasized,
    however, that the\n   intent of this document is not to standardize malformations
    or\n   otherwise encourage their proliferation.  The messages are manifestly\n
    \  malformed, and the code and culture that generates them needs to be\n   fixed.
    \ Therefore, these messages should be rejected outright if at\n   all possible.
    \ Nevertheless, many malformed messages from otherwise\n   legitimate senders
    are in circulation and will be for some time, and,\n   unfortunately, commercial
    reality shows that we cannot always simply\n   reject or discard them.  Accordingly,
    this document presents\n   alternatives for dealing with them in ways that seem
    to do the least\n   additional harm until the infrastructure is tightened up to
    match the\n   standards.\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-ietf-appsawg-malformed-mail-04
doctype: internet-draft
