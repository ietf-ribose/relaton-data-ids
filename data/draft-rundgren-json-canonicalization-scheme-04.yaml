---
id: I-Drundgren-json-canonicalization-scheme
title:
- content: JSON Canonicalization Scheme (JCS)
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-rundgren-json-canonicalization-scheme-04.txt
  type: TXT
type: standard
docid:
- id: I-D rundgren-json-canonicalization-scheme
  type: IETF
- id: I-D.rundgren-json-canonicalization-scheme
  type: IETF
  scope: anchor
- id: draft-rundgren-json-canonicalization-scheme-04
  type: Internet-Draft
docnumber: I-D.rundgren-json-canonicalization-scheme
date:
- type: published
  value: 2019-02
contributor:
- organization:
    name:
    - Internet Engineering Task Force
    abbreviation: IETF
  role:
  - publisher
- person:
    name:
      initial:
      - content: A.
        language:
        - en
      surname:
        content: Rundgren
        language:
        - en
      completename:
        content: Anders Rundgren
        language:
        - en
    affiliation:
    - organization:
        name:
        - Independent
  role:
  - author
- person:
    name:
      initial:
      - content: B.
        language:
        - en
      surname:
        content: Jordan
        language:
        - en
      completename:
        content: Bret Jordan
        language:
        - en
    affiliation:
    - organization:
        name:
        - Symantec Corporation
  role:
  - author
- person:
    name:
      initial:
      - content: S.
        language:
        - en
      surname:
        content: Erdtman
        language:
        - en
      completename:
        content: Samuel Erdtman
        language:
        - en
    affiliation:
    - organization:
        name:
        - Spotify AB
  role:
  - author
revdate: 2019-02
language:
- en
script:
- Latn
abstract:
- content: <p>Cryptographic operations like hashing and signing requires that the
    original data does not change during serialization or parsing. By applying the
    rules defined by the JSON Canonicalization Scheme (JCS), data provided in JSON
    [RFC8259] format can be exchanged "as is", while still being usable by secure
    cryptographic operations. JCS achieves this by building on the serialization formats
    for JSON primitives as defined by ECMAScript [ES6], constraining JSON data to
    the I-JSON [RFC7493] subset, and through a platform independent property sorting
    scheme. The intended audiences of this document are JSON tool vendors, as well
    as designers of JSON based cryptographic solutions.</p>
  language:
  - en
  script:
  - Latn
  format: text/html
place:
- Fremont, CA
fetched: '2022-01-26'
doctype: internet-draft
