---
id: I-D.ietf-tsvwg-l4s-arch
title:
  content: 'Low Latency, Low Loss, Scalable Throughput (L4S) Internet Service: Architecture'
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-ietf-tsvwg-l4s-arch-01.txt
  type: TXT
type: standard
docid:
- id: I-D.ietf-tsvwg-l4s-arch
  type: rfc-anchor
- id: draft-ietf-tsvwg-l4s-arch-01
  type: Internet-Draft
docnumber: I-D.ietf-tsvwg-l4s-arch
date:
  type: published
  value: '2017-10-30'
contributor:
- person:
    name:
      initial:
        content: B.
        language: en
      surname:
        content: Briscoe
        language: en
      completename:
        content: Bob Briscoe
        language: en
    affiliation:
      organization:
        name: CableLabs
  role: author
- person:
    name:
      initial:
        content: K.
        language: en
      surname:
        content: De Schepper
        language: en
      completename:
        content: Koen De Schepper
        language: en
    affiliation:
      organization:
        name: Nokia Bell Labs
  role: author
- person:
    name:
      initial:
        content: M.
        language: en
      surname:
        content: Bagnulo
        language: en
      completename:
        content: Marcelo Bagnulo
        language: en
    affiliation:
      organization:
        name: Universidad Carlos III de Madrid
  role: author
revdate: '2017-10-30'
language: en
script: Latn
abstract:
  content: "\n\t <p>   This document describes the L4S architecture for the provision
    of a\n   new Internet service that could eventually replace best efforts for\n
    \  all traffic: Low Latency, Low Loss, Scalable throughput (L4S).  It is\n   becoming
    common for _all_ (or most) applications being run by a user\n   at any one time
    to require low latency.  However, the only solution\n   the IETF can offer for
    ultra-low queuing delay is Diffserv, which\n   only favours a minority of packets
    at the expense of others.  In\n   extensive testing the new L4S service keeps
    average queuing delay\n   under a millisecond for _all_ applications even under
    very heavy\n   load, without sacrificing utilization; and it keeps congestion
    loss\n   to zero.  It is becoming widely recognized that adding more access\n
    \  capacity gives diminishing returns, because latency is becoming the\n   critical
    problem.  Even with a high capacity broadband access, the\n   reduced latency
    of L4S remarkably and consistently improves\n   performance under load for applications
    such as interactive video,\n   conversational video, voice, Web, gaming, instant
    messaging, remote\n   desktop and cloud-based apps (even when all being used at
    once over\n   the same access link).  The insight is that the root cause of queuing\n
    \  delay is in TCP, not in the queue.  By fixing the sending TCP (and\n   other
    transports) queuing latency becomes so much better than today\n   that operators
    will want to deploy the network part of L4S to enable\n   new products and services.
    \ Further, the network part is simple to\n   deploy - incrementally with zero-config.
    \ Both parts, sender and\n   network, ensure coexistence with other legacy traffic.
    \ At the same\n   time L4S solves the long-recognized problem with the future\n
    \  scalability of TCP throughput.\n\n   This document describes the L4S architecture,
    briefly describing the\n   different components and how the work together to provide
    the\n   aforementioned enhanced Internet service.\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-ietf-tsvwg-l4s-arch-01
doctype: internet-draft
