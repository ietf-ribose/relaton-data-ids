---
id: I-Dsandiick-flip
title:
- content: 'Fast LIveness Protocol (FLIP)

    '
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-sandiick-flip-00.txt
  type: TXT
type: standard
docid:
- id: I-D sandiick-flip
  type: IETF
  primary: true
- id: I-D.sandiick-flip
  type: IETF
  scope: anchor
- id: draft-sandiick-flip-00
  type: Internet-Draft
docnumber: I-D.sandiick-flip
date:
- type: published
  value: 2000-03
contributor:
- organization:
    name:
    - Internet Engineering Task Force
    abbreviation: IETF
  role:
  - publisher
- person:
    name:
      initial:
      - content: I.
        language:
        - en
      surname:
        content: Duncan
        language:
        - en
      completename:
        content: Ian Duncan
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: H. J.
        language:
        - en
      surname:
        content: Sandick
        language:
        - en
      completename:
        content: Hal J. Sandick
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: B.
        language:
        - en
      surname:
        content: Cain
        language:
        - en
      completename:
        content: Bradley Cain
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: B.
        language:
        - en
      surname:
        content: Haberman
        language:
        - en
      completename:
        content: Brian Haberman
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: M.
        language:
        - en
      surname:
        content: Squire
        language:
        - en
      completename:
        content: Dr. Matt Squire
        language:
        - en
  role:
  - author
revdate: 2000-03
language:
- en
script:
- Latn
abstract:
- content: "<p>Networks and network applications must be robust and reliable. For
    many applications and services, such as packetized voice, correcting a failure
    must be almost instantaneous. The first step in correcting a failure is, of course,
    detecting that it occurred. IP routing protocols and signaling protocols as well
    as many application layer protocols incorporate their own keepalive mechanisms
    to detect failures. Typically, these protocols detect failures on the order of
    seconds or tens of seconds. While there are some physical and link layer technologies
    that inherently supply link outage detection, not all link layers do this. In
    order to provide for fast failure detection over any type of lower layer, an IP
    layer fast keepalive protocol can be used. This draft describes such a protocol
    for quickly detecting when a network layer interface of a peer has failed.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
place:
- Fremont, CA
fetched: '2022-02-11'
doctype: internet-draft
