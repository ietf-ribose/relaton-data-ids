---
id: I-D.rundgren-json-canonicalization-scheme
title:
  content: JSON Canonicalization Scheme (JCS)
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-rundgren-json-canonicalization-scheme-14.txt
  type: TXT
type: standard
docid:
- id: I-D.rundgren-json-canonicalization-scheme
  type: rfc-anchor
- id: draft-rundgren-json-canonicalization-scheme-14
  type: Internet-Draft
docnumber: I-D.rundgren-json-canonicalization-scheme
date:
  type: published
  value: '2019-10-16'
contributor:
- person:
    name:
      initial:
        content: A.
        language: en
      surname:
        content: Rundgren
        language: en
      completename:
        content: Anders Rundgren
        language: en
    affiliation:
      organization:
        name: Independent
  role: author
- person:
    name:
      initial:
        content: B.
        language: en
      surname:
        content: Jordan
        language: en
      completename:
        content: Bret Jordan
        language: en
    affiliation:
      organization:
        name: Symantec Corporation
  role: author
- person:
    name:
      initial:
        content: S.
        language: en
      surname:
        content: Erdtman
        language: en
      completename:
        content: Samuel Erdtman
        language: en
    affiliation:
      organization:
        name: Spotify AB
  role: author
revdate: '2019-10-16'
language: en
script: Latn
abstract:
  content: "\n\t <p>   Cryptographic operations like hashing and signing need the
    data to be\n   expressed in an invariant format so that the operations are reliably\n
    \  repeatable.  One way to address this is to create a canonical\n   representation
    of the data.  Canonicalization also permits data to be\n   exchanged in its original
    form on the \"wire\" while cryptographic\n   operations performed on the canonicalized
    counterpart of the data in\n   the producer and consumer end points, generate
    consistent results.\n   This document describes the JSON Canonicalization Scheme
    (JCS).  The\n   JCS specification defines how to create a canonical representation
    of\n   JSON data by building on the strict serialization methods for JSON\n   primitives
    defined by ECMAScript, constraining JSON data to the\n   I-JSON subset, and by
    using deterministic property sorting.\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-rundgren-json-canonicalization-scheme-14
doctype: internet-draft
