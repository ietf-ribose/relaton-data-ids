---
id: I-D.hahm-lwig-painless-constrained-programming
title:
  content: Painless Class 1 Devices Programming
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-hahm-lwig-painless-constrained-programming-00.txt
  type: TXT
type: standard
docid:
- id: I-D.hahm-lwig-painless-constrained-programming
  type: rfc-anchor
- id: draft-hahm-lwig-painless-constrained-programming-00
  type: Internet-Draft
docnumber: I-D.hahm-lwig-painless-constrained-programming
date:
  type: published
  value: '2013-03-11'
contributor:
- person:
    name:
      completename:
        content: Oliver Hahm
        language: en
  role: author
- person:
    name:
      completename:
        content: Emmanuel Baccelli
        language: en
  role: author
- person:
    name:
      completename:
        content: Kaspar Schleiser
        language: en
  role: author
revdate: '2013-03-11'
language: en
script: Latn
abstract:
  content: "\n\t <p>   In order to fit the constraints of Class 0 devices (offering
    much\n   less than 10KiB of RAM and 100KiB of ROM) there are no alternatives\n
    \  to implementing IP protocols in special software environments, which\n   impose
    programming paradigms that make implementation of protocol\n   specifications
    significantly more complex.  However, our experience\n   implementing RFC 4944
    and RFC 6282, TCP and UDP on Class 1 devices\n   (offering approximately 10KiB
    of RAM and 100KiB of ROM) shows that\n   there are alternatives concerning software
    environments in which to\n   implement IP protocols, which avoid such complexity
    by providing a\n   more developer-friendly environment.  This draft shares this\n
    \  experience.\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-hahm-lwig-painless-constrained-programming-00
doctype: internet-draft
