---
id: I-D.ietf-tsvwg-l4s-arch
title:
  content: 'Low Latency, Low Loss, Scalable Throughput (L4S) Internet Service: Architecture'
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-ietf-tsvwg-l4s-arch-13.txt
  type: TXT
type: standard
docid:
- id: I-D.ietf-tsvwg-l4s-arch
  type: rfc-anchor
- id: draft-ietf-tsvwg-l4s-arch-13
  type: Internet-Draft
docnumber: I-D.ietf-tsvwg-l4s-arch
date:
  type: published
  value: '2021-11-07'
contributor:
- person:
    name:
      initial:
        content: B.
        language: en
      surname:
        content: Briscoe
        language: en
      completename:
        content: Bob Briscoe
        language: en
    affiliation:
      organization:
        name: Independent
  role: author
- person:
    name:
      initial:
        content: K.
        language: en
      surname:
        content: De Schepper
        language: en
      completename:
        content: Koen De Schepper
        language: en
    affiliation:
      organization:
        name: Nokia Bell Labs
  role: author
- person:
    name:
      initial:
        content: M.
        language: en
      surname:
        content: Bagnulo
        language: en
      completename:
        content: Marcelo Bagnulo
        language: en
    affiliation:
      organization:
        name: Universidad Carlos III de Madrid
  role: author
- person:
    name:
      initial:
        content: G.
        language: en
      surname:
        content: White
        language: en
      completename:
        content: Greg White
        language: en
    affiliation:
      organization:
        name: CableLabs
  role: author
revdate: '2021-11-07'
language: en
script: Latn
abstract:
  content: "\n\t <p>   This document describes the L4S architecture, which enables
    Internet\n   applications to achieve Low queuing Latency, Low Loss, and Scalable\n
    \  throughput (L4S).  The insight on which L4S is based is that the root\n   cause
    of queuing delay is in the congestion controllers of senders,\n   not in the queue
    itself.  With the L4S architecture all Internet\n   applications could (but do
    not have to) transition away from\n   congestion control algorithms that cause
    substantial queuing delay,\n   to a new class of congestion controls that induce
    very little\n   queuing, aided by explicit congestion signalling from the network.\n
    \  This new class of congestion controls can provide low latency for\n   capacity-seeking
    flows, so applications can achieve both high\n   bandwidth and low latency.\n\n
    \  The architecture primarily concerns incremental deployment.  It\n   defines
    mechanisms that allow the new class of L4S congestion\n   controls to coexist
    with 'Classic' congestion controls in a shared\n   network.  These mechanisms
    aim to ensure that the latency and\n   throughput performance using an L4S-compliant
    congestion controller\n   is usually much better (and rarely worse) than performance
    would have\n   been using a 'Classic' congestion controller, and that competing\n
    \  flows continuing to use 'Classic' controllers are typically not\n   impacted
    by the presence of L4S.  These characteristics are important\n   to encourage
    adoption of L4S congestion control algorithms and L4S\n   compliant network elements.\n\n
    \  The L4S architecture consists of three components: network support to\n   isolate
    L4S traffic from classic traffic; protocol features that\n   allow network elements
    to identify L4S traffic; and host support for\n   L4S congestion controls.\n\n\t
    </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-ietf-tsvwg-l4s-arch-13
doctype: internet-draft
