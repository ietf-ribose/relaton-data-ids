---
id: I-Dietf-tcpm-rack
title:
- content: The RACK-TLP Loss Detection Algorithm for TCP
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-ietf-tcpm-rack-15.txt
  type: TXT
type: standard
docid:
- id: I-D ietf-tcpm-rack
  type: IETF
  primary: true
- id: I-D.ietf-tcpm-rack
  type: IETF
  scope: anchor
- id: draft-ietf-tcpm-rack-15
  type: Internet-Draft
docnumber: I-D.ietf-tcpm-rack
date:
- type: published
  value: '2020-12-22'
contributor:
- person:
    name:
      completename:
        content: Yuchung Cheng
        language:
        - en
    affiliation:
    - organization:
        name:
        - Google, Inc
  role:
  - author
- person:
    name:
      completename:
        content: Neal Cardwell
        language:
        - en
    affiliation:
    - organization:
        name:
        - Google, Inc
  role:
  - author
- person:
    name:
      completename:
        content: Nandita Dukkipati
        language:
        - en
    affiliation:
    - organization:
        name:
        - Google, Inc
  role:
  - author
- person:
    name:
      completename:
        content: Priyaranjan Jha
        language:
        - en
    affiliation:
    - organization:
        name:
        - Google, Inc
  role:
  - author
revdate: '2020-12-22'
language:
- en
script:
- Latn
abstract:
- content: "<p>This document presents the RACK-TLP loss detection algorithm for TCP.
    RACK-TLP uses per-segment transmit timestamps and selective acknowledgments (SACKs)
    and has two parts. Recent Acknowledgment (RACK) starts fast recovery quickly using
    time-based inferences derived from acknowledgment (ACK) feedback, and Tail Loss
    Probe (TLP) leverages RACK and sends a probe packet to trigger ACK feedback to
    avoid retransmission timeout (RTO) events. Compared to the widely used duplicate
    acknowledgment (DupAck) threshold approach, RACK-TLP detects losses more efficiently
    when there are application-limited flights of data, lost retransmissions, or data
    packet reordering events. It is intended to be an alternative to the DupAck threshold
    approach.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
fetched: '2022-02-22'
doctype: internet-draft
