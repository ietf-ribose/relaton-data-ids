---
id: I-D.joseph-pkix-p6rsshextension
title:
  content: P6R's Secure Shell Public Key Subsystem
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-joseph-pkix-p6rsshextension-01.txt
  type: TXT
type: standard
docid:
- id: I-D.joseph-pkix-p6rsshextension
  type: rfc-anchor
- id: draft-joseph-pkix-p6rsshextension-01
  type: Internet-Draft
docnumber: I-D.joseph-pkix-p6rsshextension
date:
  type: published
  value: '2013-05-30'
contributor:
- person:
    name:
      initial:
        content: M.
        language: en
      surname:
        content: Joseph
        language: en
      completename:
        content: Mark Joseph
        language: en
  role: author
- person:
    name:
      initial:
        content: J.
        language: en
      surname:
        content: Susoy
        language: en
      completename:
        content: Jim Susoy
        language: en
  role: author
revdate: '2013-05-30'
language: en
script: Latn
abstract:
  content: "\n\t <p>   The Secure Shell Public Key Subsystem protocol defines a key
    distribution\n   protocol to provision an SSH server with user's public keys.
    \ However,\n   that protocol is limited to provisioning an SSH server.   This
    document\n   describes a new protocol that builds on the protocol defined in RFC
    4819\n   to allow the provisioning of keys and certificates to a server using
    the\n   SSH transport.\n\n   The new protocol allows the calling client to organize\n
    \  keys and certificates in different namespaces on a server.  These\n   namespaces
    can be used by the server to allow a client to configure\n   any application running
    on the server (e.g., SSH, KMIP, SNMP).\n\n   The new protocol provides a server-independent
    mechanism for clients\n   to add public keys, remove public keys, add certificates,
    remove\n   certificates, and list the current set of keys and certificates known
    by\n   the server by namespace (e.g., list all public keys in the SSH\n   namespace).\n\n
    \  Rights to manage keys and certificates in a specific namespace are\n   specific
    and limited to the authorized user and are defined as part of\n   the server's
    implementation.   The described protocol is backward\n   compatible to version
    2 defined by RFC 4819.\n\n\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-joseph-pkix-p6rsshextension-01
doctype: internet-draft
