---
id: I-D.galb-secsh-publickey-subsystem
title:
  content: Secure Shell Public-Key Subsystem
  language: en
  script: Latn
  format: text/plain
link:
  content: https://www.ietf.org/archive/id/draft-galb-secsh-publickey-subsystem-02.txt
  type: TXT
type: standard
docid:
- id: I-D.galb-secsh-publickey-subsystem
  type: rfc-anchor
- id: draft-galb-secsh-publickey-subsystem-02
  type: Internet-Draft
docnumber: I-D.galb-secsh-publickey-subsystem
date:
  type: published
  value: '2003-08-20'
contributor:
- person:
    name:
      initial:
        content: J.
        language: en
      surname:
        content: Galbraith
        language: en
      completename:
        content: Joseph Galbraith
        language: en
    affiliation:
      organization:
        name: VanDyke Software
  role: author
- person:
    name:
      initial:
        content: J.
        language: en
      surname:
        content: Van Dyke
        language: en
      completename:
        content: Jeff Van Dyke
        language: en
    affiliation:
      organization:
        name: VanDyke Software
  role: author
- person:
    name:
      initial:
        content: C. R.
        language: en
      surname:
        content: McClure
        language: en
      completename:
        content: Dr. Charles R. McClure
        language: en
  role: author
revdate: '2003-08-20'
language: en
script: Latn
abstract:
  content: "\n\t <p>SECSH defines an authentication mechanism that is based on public\nkeys,
    but does not define any mechanism for key distribution.  No\ncommon key management
    solution exists in current implementations.\nThis document describes a protocol
    that can be used to configure\npublic keys in an implementation-independent fashion,
    allowing client\nsoftware to take on the burden of this configuration.\nThis protocol
    is intended to be used from the Secure Shell Connection\nProtocol [4] as a subsystem,
    as described in\tSection ``Starting a\nShell or a Command''.  The subsystem name
    used with this protocol is\nThe public-key subsystem provides a server-independent
    mechanism for\nclients to add public keys, remove public keys, and list the current\npublic
    keys known by the server.  Rights to manage public keys are\nspecific and limited
    to the authenticated user.\nA public key may also be associated with a mandatory
    command.\n\t </p>\n      "
  language: en
  script: Latn
  format: text/html
series:
  type: main
  title:
    content: Internet-Draft
    language: en
    script: Latn
    format: text/plain
  number: draft-galb-secsh-publickey-subsystem-02
doctype: internet-draft
