---
id: I-Dietf-6man-deprecate-atomfrag-generation
title:
- content: Deprecation of the Generation of IPv6 Atomic Fragments
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://www.ietf.org/archive/id/draft-ietf-6man-deprecate-atomfrag-generation-04.txt
  type: TXT
type: standard
docid:
- id: I-D ietf-6man-deprecate-atomfrag-generation
  type: IETF
  primary: true
- id: I-D.ietf-6man-deprecate-atomfrag-generation
  type: IETF
  scope: anchor
- id: draft-ietf-6man-deprecate-atomfrag-generation-04
  type: Internet-Draft
docnumber: I-D.ietf-6man-deprecate-atomfrag-generation
date:
- type: published
  value: '2015-11-26'
contributor:
- organization:
    name:
    - Internet Engineering Task Force
    abbreviation: IETF
  role:
  - publisher
- person:
    name:
      initial:
      - content: F.
        language:
        - en
      surname:
        content: Gont
        language:
        - en
      completename:
        content: Fernando Gont
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: W. S.
        language:
        - en
      surname:
        content: LIU
        language:
        - en
      completename:
        content: Will (Shucheng) LIU
        language:
        - en
  role:
  - author
- person:
    name:
      initial:
      - content: T.
        language:
        - en
      surname:
        content: Anderson
        language:
        - en
      completename:
        content: Tore Anderson
        language:
        - en
  role:
  - author
revdate: '2015-11-26'
language:
- en
script:
- Latn
abstract:
- content: <p>RFC2460 requires that when a host receives an ICMPv6 "Packet Too Big"
    message reporting an MTU smaller than 1280 bytes, the host includes a Fragment
    Header in all subsequent packets sent to that destination, without reducing the
    assumed Path-MTU. The simplicity with which ICMPv6 "Packet Too Big" messages can
    be forged, coupled with the widespread filtering of IPv6 fragments, results in
    an attack vector that can be leveraged for Denial of Service purposes. This document
    briefly discusses the aforementioned attack vector, and why the aforementioned
    functionality is undesirable.</p>
  language:
  - en
  script:
  - Latn
  format: text/html
fetched: '2022-02-18'
doctype: internet-draft
